/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Conexion;
import controlador.GestionClientes;
import controlador.GestionListados;
import controlador.GestionReparaciones;
import java.awt.CardLayout;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import org.hibernate.HibernateException;

/**
 *
 * @author Luis
 */
public class FormularioListados extends javax.swing.JDialog {

    DefaultTableModel modeloTablaCoches;
    DefaultTableModel modeloTablaCochesE;
    DefaultTableModel modeloTablaSalario;
    DefaultTableModel modeloTablaFacturacion;
    DefaultTableModel modeloTablaHistorico;
    DefaultListModel modeloLista;

    public FormularioListados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        modeloTablaCoches = (DefaultTableModel) jTable1.getModel();
        modeloTablaCochesE = (DefaultTableModel) jTable2.getModel();
        modeloTablaSalario = (DefaultTableModel) tbSalarios.getModel();
        modeloTablaFacturacion = (DefaultTableModel) tbFacturacion.getModel();
        modeloTablaHistorico = (DefaultTableModel) tbHistorico.getModel();
        modeloLista = new DefaultListModel();
        jList1.setModel(modeloLista);
        llenarListaClientes();
        listarCochesMarca();

        llenarComboMeses();
    }

    void listarCochesMarca() {
        try {
            Conexion.abrirBD();
            if (jList1.getSelectedIndex() < 0) {
                return;
            }
            GestionListados.listarCochesPorMarca(jList1.getSelectedValue().getCodcli(), modeloTablaCoches);

        } catch (HibernateException ex) {
            ex.getMessage();
        } finally {
            Conexion.cerrarBD();
        }
    }

    void listarCochesPorModelo() {
        try {
            Conexion.abrirBD();
            if (jList1.getSelectedIndex() < 0) {
                return;
            }
            GestionListados.listarCochesPorModelo(jList1.getSelectedValue().getCodcli(), modeloTablaCoches);

        } catch (HibernateException ex) {
            ex.getMessage();
        } finally {
            Conexion.cerrarBD();
        }
    }

    void llenarListaClientes() {
        try {
            Conexion.abrirBD();
            GestionReparaciones.rellenarLista(modeloLista);
        } catch (HibernateException ex) {

        } finally {
            Conexion.cerrarBD();

        }
    }

    void llenarComboMeses() {
        cbMeses.removeAllItems();
        cbMeses.addItem("Enero");
        cbMeses.addItem("Febrero");
        cbMeses.addItem("Marzo");
        cbMeses.addItem("Abril");
        cbMeses.addItem("Mayo");
        cbMeses.addItem("Junio");
        cbMeses.addItem("Julio");
        cbMeses.addItem("Agosto");
        cbMeses.addItem("Septiembre");
        cbMeses.addItem("Octubre");
        cbMeses.addItem("Noviembre");
        cbMeses.addItem("Diciembre");

        cbMeses2.removeAllItems();
        cbMeses2.addItem("Enero");
        cbMeses2.addItem("Febrero");
        cbMeses2.addItem("Marzo");
        cbMeses2.addItem("Abril");
        cbMeses2.addItem("Mayo");
        cbMeses2.addItem("Junio");
        cbMeses2.addItem("Julio");
        cbMeses2.addItem("Agosto");
        cbMeses2.addItem("Septiembre");
        cbMeses2.addItem("Octubre");
        cbMeses2.addItem("Noviembre");
        cbMeses2.addItem("Diciembre");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        rbA = new javax.swing.JRadioButton();
        rbB = new javax.swing.JRadioButton();
        rbC = new javax.swing.JRadioButton();
        rbD = new javax.swing.JRadioButton();
        rbE = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        rbMarca = new javax.swing.JRadioButton();
        rbModelo = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cbMeses = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbSalarios = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbFacturacion = new javax.swing.JTable();
        cbMeses2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbHistorico = new javax.swing.JTable();
        cbClientes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        buttonGroup1.add(rbA);
        rbA.setSelected(true);
        rbA.setText("A - Datos coches por cliente");
        rbA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbB);
        rbB.setText("B - Salario Empleados por mes");
        rbB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbC);
        rbC.setText("C - FacturaciÃ³n Empleados");
        rbC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbD);
        rbD.setText("D - Reparaciones por cliente");
        rbD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbE);
        rbE.setText("E - Coches en taller");
        rbE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new java.awt.CardLayout());

        buttonGroup2.add(rbMarca);
        rbMarca.setSelected(true);
        rbMarca.setText("Marca");
        rbMarca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbMarcaItemStateChanged(evt);
            }
        });
        rbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMarcaActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbModelo);
        rbModelo.setText("Modelo");
        rbModelo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbModeloItemStateChanged(evt);
            }
        });
        rbModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbModeloActionPerformed(evt);
            }
        });

        jLabel2.setText("Filtro:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Matricula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(jList1);

        jLabel1.setText("Clientes");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(403, 403, 403)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(49, 49, 49)
                .addComponent(rbMarca)
                .addGap(28, 28, 28)
                .addComponent(rbModelo)
                .addGap(340, 340, 340))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(255, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMarca)
                    .addComponent(rbModelo)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, "Datos");

        cbMeses.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMesesItemStateChanged(evt);
            }
        });
        cbMeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMesesActionPerformed(evt);
            }
        });

        jLabel3.setText("Mes");

        tbSalarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Empleado", "Salario", "BonificaciÃ³n", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSalarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbSalarios);
        if (tbSalarios.getColumnModel().getColumnCount() > 0) {
            tbSalarios.getColumnModel().getColumn(0).setResizable(false);
            tbSalarios.getColumnModel().getColumn(1).setResizable(false);
            tbSalarios.getColumnModel().getColumn(2).setResizable(false);
            tbSalarios.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(253, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(84, 84, 84)
                        .addComponent(cbMeses, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(234, 234, 234))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        jPanel1.add(jPanel3, "Salario");

        tbFacturacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Emp.", "FacturaciÃ³n", "BonificaciÃ³n", "% de FacturaciÃ³n"
            }
        ));
        tbFacturacion.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tbFacturacion);

        cbMeses2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMeses2ItemStateChanged(evt);
            }
        });
        cbMeses2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMeses2ActionPerformed(evt);
            }
        });

        jLabel4.setText("(Si no han facturado ese mes, no aparecen)");

        jLabel5.setText("Mes:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(290, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(42, 42, 42)
                        .addComponent(cbMeses2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(231, 231, 231))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMeses2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(24, 24, 24))
        );

        jPanel1.add(jPanel5, "Facturacion");

        tbHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Cli.", "Modelo", "Marca", "Reparaciones"
            }
        ));
        tbHistorico.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tbHistorico);

        cbClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbClientesItemStateChanged(evt);
            }
        });

        jLabel6.setText("Clientes");

        jTextField1.setEditable(false);

        jLabel7.setText("Total reparaciones:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap(529, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(88, 88, 88)
                                .addComponent(cbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(153, 153, 153))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(16, 16, 16))
        );

        jPanel1.add(jPanel6, "Reparaciones");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Matricula", "Nombre Cli.", "Nombre Emp.", "Fecha de entrada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, "Coches");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbE)
                    .addComponent(rbD)
                    .addComponent(rbB)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(rbC, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(rbA)
                            .addGap(2, 2, 2))))
                .addGap(354, 354, 354))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbA)
                .addGap(3, 3, 3)
                .addComponent(rbB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setBounds(0, 0, 919, 595);
    }// </editor-fold>//GEN-END:initComponents

    private void rbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMarcaActionPerformed
        modeloTablaCoches.setRowCount(0);
        listarCochesMarca();
    }//GEN-LAST:event_rbMarcaActionPerformed

    private void rbModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbModeloActionPerformed
        modeloTablaCoches.setRowCount(0);
        listarCochesPorModelo();
    }//GEN-LAST:event_rbModeloActionPerformed

    private void rbBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBActionPerformed
        CardLayout cl = (CardLayout) jPanel1.getLayout();
        cl.show(jPanel1, "Salario");

        modeloTablaSalario.setRowCount(0);
        listarEmpleadosBoni();

    }//GEN-LAST:event_rbBActionPerformed

    private void rbAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAActionPerformed
        CardLayout cl = (CardLayout) jPanel1.getLayout();
        cl.show(jPanel1, "Datos");
    }//GEN-LAST:event_rbAActionPerformed

    private void cbMesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMesesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMesesActionPerformed

    private void cbMesesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMesesItemStateChanged
        modeloTablaSalario.setRowCount(0);
        if (evt.getStateChange() > 1) {
            return;
        }
        if (cbMeses.getSelectedIndex() == -1) {
            return;
        }
        listarEmpleadosBoni();
    }//GEN-LAST:event_cbMesesItemStateChanged
    void listarEmpleadosBoni() {
        try {
            Conexion.abrirBD();
            GestionListados.listarTablaEmpleados(mes(), modeloTablaSalario);
            bonificacionPorMesYSumatorio();
        } catch (HibernateException ex) {
            ex.getMessage();
        } finally {
            Conexion.cerrarBD();
        }
    }
    private void rbEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEActionPerformed
        CardLayout cl = (CardLayout) jPanel1.getLayout();
        cl.show(jPanel1, "Coches");
        modeloTablaCochesE.setRowCount(0);
        try {
            Conexion.abrirBD();
            GestionListados.listarCochesTaller(modeloTablaCochesE);
        } catch (HibernateException ex) {
            ex.printStackTrace();
        } finally {
            Conexion.cerrarBD();
        }
    }//GEN-LAST:event_rbEActionPerformed

    private void rbCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCActionPerformed
        CardLayout cl = (CardLayout) jPanel1.getLayout();
        cl.show(jPanel1, "Facturacion");

        modeloTablaFacturacion.setRowCount(0);
        try {
            Conexion.abrirBD();
            GestionListados.listarFacturacionMes(mesFacturacion(), modeloTablaFacturacion);
            for (int i = 0; i < modeloTablaFacturacion.getRowCount(); i++) {
                Object b = GestionListados.listarBonificaciones(mesFacturacion(), modeloTablaFacturacion.getValueAt(i, 0).toString());
                modeloTablaFacturacion.setValueAt(b, i, 2);

            }
            //Para cargar el %
            float sumatorio = 0;
            for (int i = 0; i < modeloTablaFacturacion.getRowCount(); i++) {

                sumatorio += Float.parseFloat(modeloTablaFacturacion.getValueAt(i, 1).toString());
            }
            if (sumatorio > 0) {
                for (int i = 0; i < modeloTablaFacturacion.getRowCount(); i++) {
                    Object b = GestionListados.listarBonificaciones(mesFacturacion(), modeloTablaFacturacion.getValueAt(i, 0).toString());
                    modeloTablaFacturacion.setValueAt(b, i, 2);
                    DecimalFormat df = new DecimalFormat();
                    df.setMaximumFractionDigits(2);
                    modeloTablaFacturacion.setValueAt(df.format((Float.parseFloat(modeloTablaFacturacion.getValueAt(i, 1).toString()) / sumatorio) * 100) + "%", i, 3);
                }
            }
        } catch (HibernateException ex) {

        } finally {
            Conexion.cerrarBD();
        }
    }//GEN-LAST:event_rbCActionPerformed

    private void cbMeses2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMeses2ItemStateChanged
        modeloTablaFacturacion.setRowCount(0);

        if (evt.getStateChange() > 1) {
            return;
        }
        if (cbMeses.getSelectedIndex() == -1) {
            return;
        }
        try {
            Conexion.abrirBD();
            GestionListados.listarFacturacionMes(mesFacturacion(), modeloTablaFacturacion);
            float sumatorio = 0;
            for (int i = 0; i < modeloTablaFacturacion.getRowCount(); i++) {

                sumatorio += Float.parseFloat(modeloTablaFacturacion.getValueAt(i, 1).toString());
            }
            if (sumatorio > 0) {
                for (int i = 0; i < modeloTablaFacturacion.getRowCount(); i++) {
                    Object b = GestionListados.listarBonificaciones(mesFacturacion(), modeloTablaFacturacion.getValueAt(i, 0).toString());
                    modeloTablaFacturacion.setValueAt(b, i, 2);
                    DecimalFormat df = new DecimalFormat();
                    df.setMaximumFractionDigits(2);
                    modeloTablaFacturacion.setValueAt(df.format((Float.parseFloat(modeloTablaFacturacion.getValueAt(i, 1).toString()) / sumatorio) * 100) + "%", i, 3);
                }
            }
        } catch (HibernateException ex) {
            ex.getMessage();
        } finally {
            Conexion.cerrarBD();
        }
    }//GEN-LAST:event_cbMeses2ItemStateChanged

    private void cbClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbClientesItemStateChanged
        if (cbClientes.getSelectedIndex() == -1) {
            return;
        }
        modeloTablaHistorico.setRowCount(0);
        String[] a = cbClientes.getSelectedItem().toString().split("-");
        try {
            Conexion.abrirBD();
            GestionListados.listadoReparacionesHistorico(a[1].trim(), modeloTablaHistorico);
            GestionListados.totalReparacionesPorCliente(a[1].trim(), jTextField1);
        } catch (HibernateException ex) {
            ex.printStackTrace();
        } finally {
            Conexion.cerrarBD();
        }


    }//GEN-LAST:event_cbClientesItemStateChanged

    private void rbDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDActionPerformed
        CardLayout cl = (CardLayout) jPanel1.getLayout();
        cl.show(jPanel1, "Reparaciones");
        cbClientes.removeAllItems();

        try {
            Conexion.abrirBD();
            GestionClientes.rellenarCombo(cbClientes);
        } catch (HibernateException ex) {

        } finally {
            Conexion.cerrarBD();

        }

        modeloTablaHistorico.setRowCount(0);
        if (cbClientes.getSelectedIndex() != -1) {

            String[] a = cbClientes.getSelectedItem().toString().split("-");

            try {
                Conexion.abrirBD();
                GestionListados.listadoReparacionesHistorico(a[1].trim(), modeloTablaHistorico);
                GestionListados.totalReparacionesPorCliente(a[1].trim(), jTextField1);
            } catch (HibernateException ex) {
                ex.printStackTrace();
            } finally {
                Conexion.cerrarBD();
            }
        }
    }//GEN-LAST:event_rbDActionPerformed

    private void cbMeses2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMeses2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMeses2ActionPerformed

    private void rbMarcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbMarcaItemStateChanged

    }//GEN-LAST:event_rbMarcaItemStateChanged

    private void rbModeloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbModeloItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rbModeloItemStateChanged

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        modeloTablaCoches.setRowCount(0);
        listarCochesMarca();
    }//GEN-LAST:event_jList1ValueChanged

    private void bonificacionPorMesYSumatorio() {

        for (int i = 0; i < modeloTablaSalario.getRowCount(); i++) {
            Object b = GestionListados.listarBonificaciones(mes(), modeloTablaSalario.getValueAt(i, 0).toString());
            modeloTablaSalario.setValueAt(b, i, 2);
            modeloTablaSalario.setValueAt(Float.parseFloat(b.toString()) + Float.parseFloat(modeloTablaSalario.getValueAt(i, 1).toString()), i, 3);
        }

    }

    private String mes() {
        String mes = "";
        if (cbMeses.getSelectedItem().equals("Enero")) {
            mes = "1";
        } else if (cbMeses.getSelectedItem().equals("Febrero")) {
            mes = "2";
        } else if (cbMeses.getSelectedItem().equals("Marzo")) {
            mes = "3";
        } else if (cbMeses.getSelectedItem().equals("Abril")) {
            mes = "4";
        } else if (cbMeses.getSelectedItem().equals("Mayo")) {
            mes = "5";
        } else if (cbMeses.getSelectedItem().equals("Junio")) {
            mes = "6";
        } else if (cbMeses.getSelectedItem().equals("Julio")) {
            mes = "7";
        } else if (cbMeses.getSelectedItem().equals("Agosto")) {
            mes = "8";
        } else if (cbMeses.getSelectedItem().equals("Septiembre")) {
            mes = "9";
        } else if (cbMeses.getSelectedItem().equals("Octubre")) {
            mes = "10";
        } else if (cbMeses.getSelectedItem().equals("Noviembre")) {
            mes = "11";
        } else if (cbMeses.getSelectedItem().equals("Diciembre")) {
            mes = "12";
        }
        return mes;
    }

    private String mesFacturacion() {
        String mes = "";
        if (cbMeses2.getSelectedItem().equals("Enero")) {
            mes = "1";
        } else if (cbMeses2.getSelectedItem().equals("Febrero")) {
            mes = "2";
        } else if (cbMeses2.getSelectedItem().equals("Marzo")) {
            mes = "3";
        } else if (cbMeses2.getSelectedItem().equals("Abril")) {
            mes = "4";
        } else if (cbMeses2.getSelectedItem().equals("Mayo")) {
            mes = "5";
        } else if (cbMeses2.getSelectedItem().equals("Junio")) {
            mes = "6";
        } else if (cbMeses2.getSelectedItem().equals("Julio")) {
            mes = "7";
        } else if (cbMeses2.getSelectedItem().equals("Agosto")) {
            mes = "8";
        } else if (cbMeses2.getSelectedItem().equals("Septiembre")) {
            mes = "9";
        } else if (cbMeses2.getSelectedItem().equals("Octubre")) {
            mes = "10";
        } else if (cbMeses2.getSelectedItem().equals("Noviembre")) {
            mes = "11";
        } else if (cbMeses2.getSelectedItem().equals("Diciembre")) {
            mes = "12";
        }
        return mes;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioListados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioListados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioListados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioListados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormularioListados dialog = new FormularioListados(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbClientes;
    private javax.swing.JComboBox<String> cbMeses;
    private javax.swing.JComboBox<String> cbMeses2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<Cliente> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton rbA;
    private javax.swing.JRadioButton rbB;
    private javax.swing.JRadioButton rbC;
    private javax.swing.JRadioButton rbD;
    private javax.swing.JRadioButton rbE;
    private javax.swing.JRadioButton rbMarca;
    private javax.swing.JRadioButton rbModelo;
    private javax.swing.JTable tbFacturacion;
    private javax.swing.JTable tbHistorico;
    private javax.swing.JTable tbSalarios;
    // End of variables declaration//GEN-END:variables
}
